@page "/Prestamos/Create"
@inject PrestamosServices prestamosServices
@inject DeudoresServices deudoresServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Crear Préstamo</PageTitle>

<Toasts class="p-3 mt-5" Messages="messages" Placement="ToastsPlacement.TopRight" />

<div class="border shadow-lg p-3 rounded">
    <div class="card-header bg-primary text-white text-center py-2 rounded">
        <h3 style="font-weight: bold;" class="mb-0">Crear Préstamo</h3>
    </div>

    <div class="card-body">
        <EditForm Model="prestamo" OnValidSubmit="GuardarPrestamo">
            <DataAnnotationsValidator />
            <ValidationSummary />

            @*Deudor*@
            <div class="mb-3">
                <label for="DeudorId" class="form-label">Deudor</label>
                <InputSelect id="DeudorId" @bind-Value="prestamo.DeudorId" class="form-control" required>
                    <option value="">Seleccione un Deudor</option>
                    @foreach (var deudor in deudores)
                    {
                        <option value="@deudor.DeudorId">@deudor.Nombres</option>
                    }
                </InputSelect>
            </div>

            @*Concepto*@
            <div class="mb-3">
                <label for="Concepto" class="form-label">Concepto</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-card-text"></i>
                    </span>
                    <InputText id="Concepto" @bind-Value="prestamo.Concepto" class="form-control" required />
                </div>
            </div>

            @*Monto*@
            <div class="mb-3">
                <label for="Monto" class="form-label">Monto</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-currency-dollar"></i>
                    </span>
                    <InputNumber id="Monto" @bind-Value="prestamo.Monto" class="form-control" required />
                </div>
            </div>

            @*Balance*@
            <div class="mb-3">
                <label for="Monto" class="form-label">label</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-currency-bitcoin"></i>
                    </span>
                    <InputNumber id="Balance" @bind-Value="prestamo.Balance" class="form-control" disabled />
                </div>
            </div>

            <div class="text-end">
                <button type="submit" class="btn btn-success me-2">
                    <i class="bi bi-floppy mt-3"></i> Guardar
                </button>
                <button type="button" @onclick="Volver" class="btn btn-danger">
                    <i class="bi bi-arrow-left mt-3"></i> Volver
                </button>
            </div>
        </EditForm>

        @* Alertas *@
        @if (alertMessage != null)
        {
            <div class="mt-3">
                <Alert Color="@alertColor">@alertMessage</Alert>
            </div>
        }
    </div>
</div>

@code {
    private Prestamos prestamo = new Prestamos();
    private List<Deudores> deudores = new List<Deudores>();
    private List<ToastMessage> messages = new List<ToastMessage>();

    private string? alertMessage;
    private AlertColor alertColor;

    protected override async Task OnInitializedAsync()
    {
        deudores = await prestamosServices.ObtenerDeudores();
    }
    private async Task GuardarPrestamo()
    {
        prestamo.Balance = prestamo.Monto;

        if (await prestamosServices.Guardar(prestamo))
        {
            ShowMessage(ToastType.Success);
            ShowAlert("Préstamo creado con éxito.", AlertColor.Success);
            navigationManager.NavigateTo("/Prestamos/Index");
        }
        else
        {
            ShowMessage(ToastType.Warning);
            ShowAlert("Error al crear el préstamo.", AlertColor.Danger);
        }
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/Prestamos/Index");
    }

    private void ShowMessage(ToastType toastType) => messages.Add(CreateToastMessage(toastType));

    private ToastMessage CreateToastMessage(ToastType toastType)
        => new ToastMessage
            {
                Type = toastType,
                Title = "Blazor Bootstrap",
                HelpText = $"{DateTime.Now}",
                Message = $"Préstamo {(prestamo.PrestamoId > 0 ? "modificado" : "creado")} con éxito. Fecha y hora: {DateTime.Now}",
            };

    private void ShowAlert(string message, AlertColor color)
    {
        alertMessage = message;
        alertColor = color;
    }
}